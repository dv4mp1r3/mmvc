<?php

namespace mmvc\controllers;

use mmvc\models\data\RDBRecord;
use mmvc\controllers\CliController;
use mmvc\models\data\RDBSchemaRecord;

class GenController extends CliController
{
    const PARAM_VALUE_MODELNAME = 2;
    const PARAM_VALUE_TABLENAME = 3;
    
    /**
     * Генерация класса потомка от RDBRecord по имеющейся таблице
     * Пример использования
     * php index.php Gen-Model CliObject cliobject
     * Gen-Model - текущий action
     * CliObject - имя класса
     * cliobject - имя таблицы
     * @throws \Exception
     */
    public function actionModel()
    {        
        $modelName = $this->getInput(self::PARAM_VALUE_MODELNAME, FILTER_SANITIZE_STRING);
        $tableName = $this->getInput(self::PARAM_VALUE_TABLENAME, FILTER_SANITIZE_STRING);
        
        $record = new RDBRecord(null, $tableName);
        $record->parseSchema();
        $schema = (new RDBSchemaRecord())->getSchema($tableName);
        
        $props = "/**\r\n * generated by ".__CLASS__." at ".date('Y-m-d')."\r\n";
        
        foreach ($schema as $key => $value) {
            $type = $record->getPropertyType($key);
            $props .= " * @property $type $key\r\n";
        }
        
        $props .= "*/\r\n";
        
        $scriptPath = __DIR__.'/../models/'.$modelName.'.php';
        
        if (file_exists($scriptPath))
        {
            unlink($scriptPath);
        }
        
        $f = fopen($scriptPath, 'a+');
        if (!$f)
        {
            throw new \Exception('bad fopen result for path '.$scriptPath);
        }
        
        fwrite($f, "<?php\r\nnamespace mmvc\models;\r\n\r\n");
        fwrite($f, "use mmvc\models\data\RDBRecord;\r\n\r\n");
        fwrite($f, $props);
        fwrite($f, "class $modelName extends RDBRecord\r\n{\r\n}\r\n");
        fclose($f);    
    }
}
